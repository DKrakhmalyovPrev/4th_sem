/*
Проблема с ticket spinlock'ом связана с гарантией честности и количеством ядер процессора. Как мы знаем, планировщик имеет свой порядок
выбора активного процесса, а спинлок -- свой, при том привязанный к линейному порядку выполнения doorway-секции. При таком раскладе
некоторые процессы, находящиеся на ядре, не смогут запуститься, потому что не запустился хотя бы один процесс, стоящий перед ними в очереди
спинлока. Однако, планировщик может не дать ему времени или, по крайней мере, долго не впускать его в критическую секцию. Таким образом,
проблемы возникают уже тогда, когда кол-во процессов превышает кол-во ядер процессора.
Также проблемы могут возникнуть оттого, что синхронизация данных между потоками станет занимать слишком много времени. 
+ Учитывая, что планировщик сам распределяет кванты между потоками, а работают потоки по очереди, определённой программно, очередь одного 
потока(с точки зрения планировщика) может долго не наступать, пока остальные потоки ждут его очереди с точки зрения программы.

test-and-set spinlock, напротив, не имеет своей очереди и пускает в критическую секцию первый же процесс, который пробует войти после
выхода предыдущего, так что порядок захода регулируется исключительно планировщиком. 
*/
